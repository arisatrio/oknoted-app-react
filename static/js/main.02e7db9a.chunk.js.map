{"version":3,"sources":["components/CreateNote.js","components/Home.js","App.js","index.js"],"names":["CreateNote","state","actions","visible","className","type","placeholder","onClick","handleClick","value","notes","title","onChange","onSubmit","addToNotes","e","handleChangeNote","target","autoFocus","input","Home","styles","style","showPopUp","inputStyle","inputStyle1","edited_note","updateNote","popUp_id","removeFromNotes","breakpointCols","columnClassName","seacrh","search_list","notes_list","filter","n","id","pinned_id","map","item","index","showNote","alt","src","App","props","deleted_note","search","trash_list","bind","trash_string","localStorage","getItem","JSON","parse","list_string","document","this","setState","key","obj","length","unshift","Date","now","setItem","stringify","i","note","containsOnlyOneElement","display","to","exact","path","render","React","Component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02e7db9a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CreateNote = ({ state, ...actions }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                state.visible === false\r\n                    ?\r\n                    <div className=\"take-notes1\">\r\n                        <input type=\"text\" placeholder=\"Create a note...\" className=\"initial\"\r\n                            onClick={actions.handleClick}\r\n                            value={state.notes.title}\r\n                            onChange={() => null}\r\n                        />\r\n                    </div>\r\n                    :\r\n\r\n                    <form onSubmit={actions.addToNotes}>\r\n                        <div className=\"take-notes2\">\r\n                            <input type=\"text\" placeholder=\"Title\" className=\"title\"\r\n                                value={state.notes.title}\r\n                                onChange={(e) => actions.handleChangeNote(e.target.value, \"title\")}\r\n                            />\r\n                            <input type=\"text\" placeholder=\"Create a note...\" className=\"take-note\" autoFocus=\"autofocus\"\r\n                                value={state.notes.input}\r\n                                onChange={(e) => actions.handleChangeNote(e.target.value, \"input\")}\r\n                            />\r\n                            <button\r\n                                // onClick={actions.addToNotes}\r\n                                type=\"submit\"\r\n                                className=\"submit\"\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n\r\n                    </form>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateNote;","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport CreateNote from './CreateNote';\r\n\r\nconst Home = ({ state, styles, ...actions }) => {\r\n    return (\r\n        <div>\r\n            <CreateNote state={state} {...actions} />\r\n            <div className=\"popup\"\r\n                style={state.showPopUp ? styles.inputStyle : styles.inputStyle1}>\r\n                <p className=\"text\">\r\n                    <span className=\"edit-title\">\r\n                        <input\r\n                            value={state.edited_note.title}\r\n                            onChange={(e) => actions.handleChangeNote(e.target.value, \"title\", \"edited_note\")}\r\n                        />\r\n                        {/* pin button */}\r\n                    </span>\r\n                    <input\r\n                        className=\"edit-input\"\r\n                        value={state.edited_note.input} onChange={(e) => actions.handleChangeNote(e.target.value, \"input\", \"edited_note\")}\r\n                    />\r\n                    <button\r\n                        className=\"close\"\r\n                        onClick={e => actions.updateNote(state.popUp_id)}>\r\n                        Close\r\n                    </button>\r\n                    <button\r\n                        className=\"delete\"\r\n                        onClick={e => actions.removeFromNotes(state.popUp_id)}>\r\n                        Delete\r\n                    </button>\r\n                </p>\r\n            </div>\r\n            <ul>\r\n                <Masonry\r\n                    breakpointCols={4}\r\n                    className=\"my-masonry-grid\"\r\n                    columnClassName=\"my-masonry-grid_column\">\r\n                    {\r\n                        (!state.seacrh ? state.notes_list : state.search_list).filter(n => {\r\n                            return ((n.id !== state.pinned_id) && (n.id !== state.popUp_id))\r\n                        }).map((item, index) =>\r\n                            <li key={index} className=\"list-item\">\r\n                                <span className=\"span1\">\r\n                                    {item.title}\r\n                                    {/* <button className=\"pin-button\">\r\n                                        <img className=\"pin\" src=\"\" alt=\"\" />\r\n                                    </button> */}\r\n                                </span>\r\n                                <span className=\"span2\">\r\n                                    {item.input}\r\n                                </span>\r\n                                <button className=\"list-button\"\r\n                                    onClick={e => actions.showNote(item.id)}\r\n                                >\r\n                                    <img alt=\"home\" className=\"home\" src=\"./note.png\" />\r\n                                </button>\r\n                                <button\r\n                                    className=\"list-button\"\r\n                                    onClick={e => actions.removeFromNotes(index, item.id)}\r\n                                >\r\n                                    <img alt=\"trash\" className=\"trash\" src=\"./del.png\" />\r\n                                </button>\r\n                            </li>\r\n                        )}\r\n                </Masonry>\r\n            </ul >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport Home from './components/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n//import trash from './'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edited_note: {\n        title: \"\",\n        input: \"\",\n      },\n      notes: {\n        title: \"\",\n        input: \"\",\n      },\n      deleted_note: {\n        title: \"\",\n        input: \"\"\n      },\n\n      search: null,\n      visible: false,\n      showPopUp: false,\n      popUp_id: null,\n      pinned_id: null,\n\n      notes_list: [],\n      trash_list: [],\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeNote = this.handleChangeNote.bind(this);\n    this.addToNotes = this.addToNotes.bind(this);\n    this.removeFromNotes = this.removeFromNotes.bind(this);\n    this.showNote = this.showNote.bind(this);\n    this.updateNote = this.updateNote.bind(this);\n\n    this.actions = {\n      handleClick: this.handleClick,\n      handleChangeNote: this.handleChangeNote,\n      addToNotes: this.addToNotes,\n      removeFromNotes: this.removeFromNotes,\n      showNote: this.showNote,\n      updateNote: this.updateNote,\n    };\n  };\n\n  componentDidMount() {\n    const trash_string = localStorage.getItem('trash');\n    const trash_list = JSON.parse(trash_string);\n    const list_string = localStorage.getItem('list');\n    const notes_list = JSON.parse(list_string);\n\n    document.title = 'OK Noted!';\n\n    this.setState({\n      ...this.state,\n      notes_list: (notes_list ? notes_list : []),\n      trash_list: (trash_list ? trash_list : []),\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      ...this.state,\n      visible: true\n    });\n  }\n\n  handleChangeNote(value, key, obj = \"notes\") {\n    this.setState({\n      ...this.state,\n      [obj]: {\n        ...this.state[obj],\n        [key]: value\n      }\n    });\n  }\n\n  addToNotes() {\n    const notes_list = this.state.notes_list;\n    if ((this.state.notes.input.length) > 0 || (this.state.notes.title.length) > 0) {\n      notes_list.unshift({\n        id: Date.now(),\n        ...this.state.notes\n      });\n      this.setState({\n        ...this.state,\n        notes_list: notes_list,\n        notes: {\n          ...this.state.notes,\n          title: \"\",\n          input: \"\"\n        },\n        visible: false\n      });\n      localStorage.setItem(\"list\", JSON.stringify(notes_list));\n    } else {\n      this.setState({\n        ...this.state,\n        visible: false\n      });\n    }\n  }\n\n  removeFromNotes(i, id) {\n    let deleted_note = this.state.notes_list.filter(item => { return item.id === id })[0];\n    const trash_list = this.state.trash_list;\n\n    trash_list.unshift(deleted_note);\n    this.setState({\n      trash_list: trash_list\n    });\n\n    const notes_list = this.state.notes_list.filter((note, index) => { return index !== i; });\n    if (this.state.pinned_id) {\n      this.setState({\n        notes_list: notes_list,\n        pinned_id: null\n      });\n    }\n    else {\n      this.setState({\n        showPopUp: false,\n        notes_list: notes_list,\n      });\n    }\n\n    localStorage.setItem(\"list\", JSON.stringify(notes_list));\n    localStorage.setItem(\"trash\", JSON.stringify(trash_list));\n  }\n\n  showNote(id) {\n    let edited_note = this.state.notes_list.filter(item => { return item.id === id })[0];\n    this.setState({\n      ...this.state,\n      edited_note,\n      showPopUp: true,\n      popUp_id: id,\n    })\n  }\n\n  updateNote(id) {\n    let note = this.state.edited_note;\n    let containsOnlyOneElement = this.state.notes_list.length === 1;\n\n    this.setState({\n      ...this.state,\n      notes_list: (containsOnlyOneElement ? [{ id, ...note }] : [{ id, ...note }, this.state.notes_list.filter(item => item.id !== id)]),\n      edited_note: {\n        title: \"\",\n        input: \"\",\n      },\n      showPopUp: false,\n      popUp_id: null,\n    });\n  }\n\n\n\n\n  render() {\n    let styles = {\n      inputStyle: {\n        display: 'flex'\n      },\n      inputStyle1: {\n        display: 'none'\n      }\n    };\n\n    return (\n      <div>\n        <div className=\"header\">\n          <img src=\"./logo.png\" />\n          <h3>OK Noted!</h3>\n          <input type=\"text\" className=\"search\" placeholder=\"search\" />\n        </div>\n        <div className=\"content\">\n          <Router>\n            <div className=\"navigation\">\n              <Link to=\"/\" className=\"nav-home\">\n                <img alt=\"home\" className=\"home\" src=\"./note.png\" />\n              </Link>\n              <Link to=\"/trash\" className=\"nav-trash\">\n                <img alt=\"trash\" className=\"trash\" src=\"./del.png\" />\n              </Link>\n            </div>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Home state={this.state} styles={styles} {...this.actions} />} />\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  };\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}